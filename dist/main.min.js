(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/erikrekola/Awesome/GrannySlalom/src/js/entities/boost.js":[function(require,module,exports){
var Boost = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'runner');
    game.add.existing(this);
    game.physics.enable(this, Phaser.Physics.ARCADE);
    this.anchor.setTo(0.5, 0.5);
    this.animations.add('idle', [15]);
    this.animations.play('idle');
    this.body.setSize(90, 40, 0, 0);
}

Boost.prototype = Object.create(Phaser.Sprite.prototype);
Boost.prototype.constructor = Boost;

/**
 * Automatically called by World.update
 */
Boost.prototype.update = function () {

};

module.exports = Boost;

},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/entities/gramma.js":[function(require,module,exports){
var Gramma = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'gramma');
    game.add.existing(this);
    game.physics.enable(this, Phaser.Physics.ARCADE);
    this.scale.set(1);
    this.anchor.setTo(0.5, 0.5);
    this.smoothed = false;
    this.animations.add('run');
    this.animations.play('run', 10, true);
    this.body.bounce.setTo(1, 1);
    this.body.setSize(120, 40, 0, 60);
    this.body.immovable = true;
    this.body.collideWorldBounds = false;
    this.checkWorldBounds = true;
    this.direction = Math.round(Math.random() * 1);
}

Gramma.prototype = Object.create(Phaser.Sprite.prototype);
Gramma.prototype.constructor = Gramma;

/**
 * Automatically called by World.update
 */
Gramma.prototype.update = function () {

    this.z = this.position.y;

    // Add speed to gramma
    this.body.velocity.y = 150;

    if (this.direction == 1) {
        this.body.velocity.x = Math.random() * 50;
    } else {
        this.body.velocity.x = Math.random() * -50;
    }

    // Remove the gramma when it leaves the screen
    if (this.position.y < this.game.camera.y) {
        this.kill();
    }
};

module.exports = Gramma;

},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/entities/player.js":[function(require,module,exports){
var Player = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'runner');
    game.add.existing(this);
    game.physics.enable(this, Phaser.Physics.ARCADE);
    this.anchor.setTo(0.5, 0.5);
    this.smoothed = false;
    this.animations.add('run', [0,1,2,3,4,5]);
    this.animations.add('walk', [6,7,8,9,10]);
    this.animations.add('sprint', [11,12,13,14]);
    this.body.bounce.setTo(0, 0);
    this.body.setSize(40, 40, 0, 40);
    this.body.maxVelocity = new Phaser.Point(1000, 2000);
    this.body.collideWorldBounds = true;
    this.mass = 2;
    this.body.velocity.y = 250;
    this.speedBoost = false;
};

Player.prototype = Object.create(Phaser.Sprite.prototype);
Player.prototype.constructor = Player;

/**
 * Automatically called by World.update
 */
Player.prototype.update = function () {

    var animationSpeed = Math.ceil(this.body.velocity.y / 40);

    if (this.body.velocity.y > 1000) {
        this.animations.play('sprint', animationSpeed, true);
    } else if (this.body.velocity.y > 500) {
        this.animations.play('run', animationSpeed, true);
    } else {
        this.animations.play('walk', animationSpeed, true);
    }

    this.animations.currentAnim.speed = animationSpeed;

    this.z = this.position.y;

    // Add speed to runner
    //if (this.speedBoost === true) {
    //    this.body.velocity.y = 1500;
    //}

    this.body.velocity.y += 10 - (this.body.velocity.y / 10000);

};

Player.prototype.collectBoost = function () {
    this.body.velocity.y = 1500;
    // this.speedBoost = true;
}

Player.prototype.endBoost = function () {
    this.speedBoost = false;
}


module.exports = Player;

},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(360, 640, Phaser.AUTO, 'grannyslalom-game');

window.Utils = require('./utils');
window.playerState = {
    currentLevel: 'Game',
    scores:[]
}

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));
game.state.add('Score', require('./states/score'));
game.state.add('Win', require('./states/win'));
game.state.add('Lose', require('./states/lose'));

game.state.start('Boot');

},{"./states/boot":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/boot.js","./states/game":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/game.js","./states/lose":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/lose.js","./states/menu":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/menu.js","./states/preloader":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/preloader.js","./states/score":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/score.js","./states/splash":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/splash.js","./states/win":"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/win.js","./utils":"/Users/erikrekola/Awesome/GrannySlalom/src/js/utils.js"}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {
};

module.exports = Boot;

Boot.prototype = {

    preload: function () {
        this.load.image('preloader', 'assets/preloader.gif');
    },

    create: function () {
        this.game.input.maxPointers = 1;

        this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;

        this.game.state.start('Preloader');
    }
};

},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/game.js":[function(require,module,exports){
var Player = require('../entities/player');
var Gramma = require('../entities/gramma');
var Boost = require('../entities/boost');

var Game = function () {
    this.runner = null;
    this.land = null;
    this.grammas = null;
    this.nextGramma = null;
    this.timer = 0;
    this.stageLength = 60 * 500;
    this.boosts = null;
    this.runTimer = null;
};

module.exports = Game;

Game.prototype = {

    create: function () {

        this.world.setBounds(0, 0, 360, this.stageLength);

        this.physics.startSystem(Phaser.Physics.ARCADE);

        this.land = this.add.tileSprite(0, 0, 360, 640, 'floortile');
        this.land.scale.set(2);
        this.land.smoothed = false;
        this.land.fixedToCamera = true;

        this.runner = new Player(this.game, 360/2, 200);
        this.grammas = this.add.group();

        this.camera.follow(this.runner);
        this.camera.deadzone = new Phaser.Rectangle(0, 0, 360, 250);

        this.nextGramma = 640;

        this.runTimer = this.time.events.add(Phaser.Timer.SECOND * 60, this.endGame, this);
        this.timer = this.game.add.text(this.world.centerX, 0, "60");
        this.timer.fixedToCamera = true;

        this.timer.anchor.set(0.5, 0);

        // Drop a boost on the level
        this.boosts = this.add.group();

        var boost = new Boost(this.game, 360/2, 600);

        this.boosts.add(boost);

    },

    update: function () {

        // scroll the screen
        this.camera.y += 6;

        var timeLeft = Math.floor(this.runTimer.timer.duration / 1000);
        var distanceLeft = this.stageLength - this.camera.y - 640;

        this.timer.setText(timeLeft + ' || ' + distanceLeft);

        this.physics.arcade.collide(this.runner, this.grammas);
        this.physics.arcade.collide(this.runner, this.boosts, this.collectBoost, null, this);

        this.runner.body.velocity.x = 0;

        // Key press to right
        if (this.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {
            this.runner.body.velocity.x = + 300;
        }

        // Key press to left
        if (this.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {
            this.runner.body.velocity.x = - 300;
        }

        this.grammas.sort('y', Phaser.Group.SORT_ASCENDING);

        // the ammount is halved due to scaling
        this.land.tilePosition.x = -this.camera.x / 2;
        this.land.tilePosition.y = -this.camera.y / 2;

        if (this.camera.y > this.nextGramma) {
            this.addGramma();
        }

        // If he falls behind too much you lose
        if (this.runner.position.y <= this.camera.y) {
            this.endGame();
        }

        // When you get to the end you win
        if (distanceLeft == 0) {
            this.endGame(true);
        }
    },

    render: function () {
        // this.game.debug.bodyInfo(this.runner, 32, 32);
        // this.game.debug.body(this.runner, 32, 32);
    },

    addGramma: function () {
        var gramma = new Gramma(
            this.game,
            Math.random() * 360,
            this.camera.y + 640
        );

        // this.game.debug.body(gramma);
        this.grammas.add(gramma);
        this.nextGramma+= 320;
    },

    endGame: function (win) {
        var score = 0;

        if (win) {
            this.game.state.start('Win');
            score = Math.round(this.time.events.duration / 100);
            window.playerState.scores.push(score);
        } else {
            this.game.state.start('Lose');
        }
    },

    collectBoost: function (runner, boost) {
        boost.kill();
        this.runner.collectBoost();
        // this.time.events.add(Phaser.Timer.SECOND * 10, this.runner.endBoost);
    }
};

},{"../entities/boost":"/Users/erikrekola/Awesome/GrannySlalom/src/js/entities/boost.js","../entities/gramma":"/Users/erikrekola/Awesome/GrannySlalom/src/js/entities/gramma.js","../entities/player":"/Users/erikrekola/Awesome/GrannySlalom/src/js/entities/player.js"}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/lose.js":[function(require,module,exports){
var Lose = function () {
};

module.exports = Lose;

Lose.prototype = {
    create: function () {
        var style = {font: "24px Arial", fill: "#ffffff", align: "center"},
            text = this.add.text(this.world.centerX, 200, "You Lose", style);

        text.anchor.set(0.5, 0);

        this.input.onDown.add(this.onDown, this);
    },

    onDown: function () {
        this.game.state.start('Menu');
    }
};
},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
    this.text = null;
};

module.exports = Menu;

Menu.prototype = {

    create: function () {
        var style = {font: "24px Arial", fill: "#ffffff", align: "center"},
            text = this.add.text(this.world.centerX, 200, "Press to Start", style);

        this.stage.backgroundColor = "#000000";

        text.anchor.set(0.5, 0);

        this.input.onDown.add(this.onDown, this);
    },

    update: function () {
    },

    onDown: function () {
        this.game.state.start(playerState.currentLevel);
        // this.game.state.start('Win');
    }
};

},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
    this.asset = null;
    this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

    preload: function () {
        this.asset = this.add.sprite(320, 240, 'preloader');
        this.asset.anchor.setTo(0.5, 0.5);

        this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
        this.load.setPreloadSprite(this.asset);
        this.load.image('floortile', 'assets/floortile.png');
        this.load.spritesheet('runner', 'assets/runner.png', 120, 120);
        this.load.spritesheet('gramma', 'assets/gramma.png', 120, 120);

    },

    create: function () {
        this.asset.cropEnabled = false;
    },

    update: function () {
        if (!!this.ready) {
            this.game.state.start('Menu');
        }
    },

    onLoadComplete: function () {
        this.ready = true;
    }
};

},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/score.js":[function(require,module,exports){
var Score = function () {
};

module.exports = Score;

Score.prototype = {
    create: function () {

    }
};
},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
    create: function () {
    }
};
},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/states/win.js":[function(require,module,exports){
var Win = function () {
};

module.exports = Win;

Win.prototype = {
    create: function () {
        var lastScore = window.playerState.scores[window.playerState.scores.length-1],
            style = {font: "24px Arial", fill: "#ffffff", align: "center"},
            text = this.add.text(this.world.centerX, 200, "You win " + lastScore, style);

        text.anchor.set(0.5, 0);

        this.input.onDown.add(this.onDown, this);
    },

    onDown: function () {
        this.game.state.start('Menu');
    }
};
},{}],"/Users/erikrekola/Awesome/GrannySlalom/src/js/utils.js":[function(require,module,exports){
var Utils = {
    containsObject: function (obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    }
};

module.exports = Utils;
},{}]},{},["/Users/erikrekola/Awesome/GrannySlalom/src/js/main.js"])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
